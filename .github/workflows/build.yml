name: Build C# Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
    - name: Restore NuGet packages
      run: nuget restore shadcnui.sln
    - name: Build
      run: msbuild shadcnui.sln /p:Configuration=Release /p:Platform="Any CPU"

    - name: Upload shadcnui.dll
      uses: actions/upload-artifact@v2
      with:
        name: shadcnui-dll
        path: shadcnui/bin/Release/shadcnui.dll

    - name: Upload shadcnui testing.dll
      uses: actions/upload-artifact@v2
      with:
        name: shadcnui-testing-dll
        path: "shadcnui testing/bin/Release/shadcnui testing.dll"

  release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Download shadcnui.dll
      uses: actions/download-artifact@v2
      with:
        name: shadcnui-dll
        path: ./shadcnui-dll

    - name: Download shadcnui testing.dll
      uses: actions/download-artifact@v2
      with:
        name: shadcnui-testing-dll
        path: ./shadcnui-testing-dll

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload shadcnui.dll to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./shadcnui-dll/shadcnui.dll
        asset_name: shadcnui.dll
        asset_content_type: application/octet-stream

    - name: Upload shadcnui testing.dll to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./shadcnui-testing-dll/shadcnui testing.dll
        asset_name: shadcnui testing.dll
        asset_content_type: application/octet-stream

  nightly_build:
    runs-on: windows-latest
    if: github.event_name == 'schedule'

    steps:
    - uses: actions/checkout@v4
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
    - name: Restore NuGet packages
      run: nuget restore shadcnui.sln
    - name: Build
      run: msbuild shadcnui.sln /p:Configuration=Release /p:Platform="Any CPU"

    - name: Upload shadcnui.dll (Nightly)
      uses: actions/upload-artifact@v2
      with:
        name: shadcnui-nightly-${{ github.run_number }}
        path: shadcnui/bin/Release/shadcnui.dll

    - name: Upload shadcnui testing.dll (Nightly)
      uses: actions/upload-artifact@v2
      with:
        name: shadcnui-testing-nightly-${{ github.run_number }}
        path: "shadcnui testing/bin/Release/shadcnui testing.dll"
